@using Microsoft.AspNetCore.Html
@model List<RabbitMQTopicHWSendSection.Models.RabbitMQDivision>

@{
    ViewData["Title"] = "Home Page";

   
}

<div class="container">

    <div class="mb-3 d-flex justify-content-center">
        <form method="post" action="/Home/AddRabbitMQDivision">
            <input type="text" name="name" id="newDivisionName" placeholder="Write new Division" class="form-control me-2" style="width: 300px;" />
            <input type="hidden" name="parentName" id="parentName" />
            <button type="submit" class="btn btn-primary">Add</button>
        </form>
    </div>


    <div id="divisionList" class="text-center">
        @foreach (var division in Model)
        {
            <div id="DD@{@division.Name}" >
                <p onclick="selectDivision('@division.Name',event)" style="cursor: pointer;"> @division.Name</p>

                @if (division.RabbitMQDivisions != null && division.RabbitMQDivisions.Count > 0)
                {
                    @RenderSubDivisions(division.RabbitMQDivisions, division.Name)
                }

               
            </div> 
        }
    </div>

    <div class="mt-3 text-center">
        <form method="post" class="d-flex justify-content-center" id="messageForm">
            <input id="newSubDivisionName" placeholder="Write Message"
                   class="form-control me-2" style="width: 300px;" />
            <input id="sendMessageRMQInput" type="hidden" name="divisionName" />
            <button type="button" class="btn btn-success" onclick="handleFormSubmission(event)">Send Message</button>
        </form>
    </div>



    <div class="mt-3 text-center">
        <h5>Selected Division Path:</h5>
        <p id="selectedDivisionPath">None</p>
    </div>
</div>

<script>
    let selectedDivision = "";


       function handleFormSubmission(event) {

        
        const messageInput = document.getElementById('newSubDivisionName').value.trim();
        const divisionNameInput = document.getElementById('sendMessageRMQInput');

        if (messageInput == "" || selectedDivision == "") {
            alert('Secim ele Message Yaz');
          
            return;
        }

        divisionNameInput.value = selectedDivision;

        const requestData = {
            divisionName: divisionNameInput.value,
            message: messageInput
        };

        fetch('/Home/SendMessageRabbitMQ', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(requestData)
        })
        .then(response => response.json())
        .then(data => {
            console.log( data);
          
        })
        .catch(error => {
            console.error('Errore:', error);
          
        });
    }

    function selectDivision(name , event){

        let selectedDivisionPath = document.getElementById("selectedDivisionPath");
        let ddElement = document.getElementById("DD"+name);
        let ddElementOld = document.getElementById("DD"+selectedDivision);
        let parentName = document.getElementById("parentName");
        let sendMessageRMQInput = document.getElementById("sendMessageRMQInput");
      
        

        if(selectedDivisionPath.innerHTML == name){
            selectedDivisionPath.innerHTML = "";
            ddElement.style.border = "";
            selectedDivision = "";
            parentName.value = "";
            sendMessageRMQInput.value = "";
           

        }
        else{
        if(ddElementOld != null){ ddElementOld.style.border = ""; }

            selectedDivisionPath.innerHTML = name;
            ddElement.style.border = "3px solid red";
            selectedDivision = name;
            parentName.value = name;
            sendMessageRMQInput.value = name;

           
        }
        console.log(parentName.value)
        console.dir(parentName)
        
        
    }


</script>

@functions {
    public IHtmlContent RenderSubDivisions(List<RabbitMQDivision> subDivisions, string parentDivisionName)
    {
        var htmlContent = new HtmlContentBuilder();

        htmlContent.AppendHtml($"<ul style=\"list-style: none; \">");

        foreach (var subDivision in subDivisions)
        {
            htmlContent.AppendHtml($"<li id=\"DD{subDivision.Name}\"> <p  onclick=\"selectDivision('{subDivision.Name}',event)\" style=\"cursor: pointer;\" >{subDivision.Name}</p>");

            if (subDivision.RabbitMQDivisions != null && subDivision.RabbitMQDivisions.Count > 0)
            {
                htmlContent.AppendHtml(RenderSubDivisions(subDivision.RabbitMQDivisions, parentDivisionName + "." + subDivision.Name));
            }

            htmlContent.AppendHtml("</li>");
        }

        htmlContent.AppendHtml("</ul>");

        return htmlContent;
    }
}
